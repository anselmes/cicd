name: Cleanup OnDemand

permissions:
  contents: read

on:
  pull_request:
    types:
      - closed
  schedule:
    - cron: 30 1 * * 6
  workflow_call:
    inputs:
      branch:
        type: string
        description: Branch to cleanup (e.g. refs/pull/1/merge)
        default: ${{ github.ref }}
  workflow_dispatch: {}

jobs:
  stale:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Cleanup stale issues and PRs
        uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 #  v9.1.0
        with:
          any-of-labels: needs-more-info,needs-demo
          days-before-close: 5
          days-before-pr-close: -1
          days-before-stale: 30
          exempt-all-pr-assignees: true
          exempt-all-pr-milestones: true
          exempt-issue-milestones: future,alpha,beta
          stale-issue-label: no-issue-activity
          stale-issue-message: Message to comment on stale issues. If none provided, will not mark issues stale
          stale-pr-label: no-pr-activity
          stale-pr-message: Message to comment on stale PRs. If none provided, will not mark PRs stale

  cache:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Cleanup cache
        shell: bash
        run: ./scripts/delete-gh-actions-cache.sh
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        env:
          BRANCH: refs/pull/${{ github.event.pull_request.number }}/merge
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}

      - name: Cleanup cache
        shell: bash
        run: ./scripts/delete-gh-actions-cache.sh
        if: ${{ github.event_name != 'pull_request' }}
        env:
          BRANCH: ${{ inputs.branch || github.ref }}
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
